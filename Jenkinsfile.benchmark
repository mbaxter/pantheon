properties([
        parameters([
                string(defaultValue: 'from-0', description: 'The name of the directory containing the benchmark data', name: 'DATASET', trim: true),
                string(defaultValue: '1000.blocks', description: 'The name of the file to import', name: 'IMPORT_FILE', trim: true)
        ])
])

pipeline {
    agent {
        docker {
            image 'pegasyseng/pantheon-build:0.0.3'
            label 'jenkins-benchmark-1'
            args '-v /benchmarks/block-import:/benchmarks-block-import-read-only'
        }
    }

    stages {
        stage('Inspect Node') {
            steps {
                echo "Node: ${env.NODE_NAME}"
                echo "Param DATASET: ${params.DATASET}"
                echo "Param IMPORT_FILE: ${params.IMPORT_FILE}"
            }
        }
        stage('Pull pantheon-benchmark') {
            steps {
                script {
                    checkout([$class: 'GitSCM', branches: [[name: '*/nc-1983']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'pantheon-benchmarks']], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'f3f67c22-eead-47db-a8c1-fe32b483583a', url: 'git@github.com:mbaxter/pantheon-benchmark.git']]])
                }
            }
        }
        stage('Run benchmarks jenkinsfile') {
            steps {
                withEnv([
                        "DATA_DIR=/benchmarks-block-import-read-only/${params.DATASET}/pantheon/data",
                        "IMPORT_FILE=/benchmarks-block-import-read-only/${params.DATASET}/${params.IMPORT_FILE}"
                ]) {
                    dir('pantheon-benchmarks') {
                        script {
                            evaluate(readFile('jenkins/Jenkinsfile'))
                        }
                    }
                }
            }
        }
    }
}